@model ShelfViewModel
@{
    ViewData["Title"] = Model.Shelf.Title;
}
<div class="row top-buffer">
    <div class="col-md-10">
        <h2>
            @if (Model.IsShelfOwner)
            {
                <span class="js-editable" data-type="text" data-pk="@Model.Shelf.Id" data-url="@Url.Action("Edit", "Shelves")" data-title="Rename shelf">@Model.Shelf.Title</span>
            }
            else
            {
                @Model.Shelf.Title
            }
            <small>
                by
                <a asp-controller="Profiles" asp-action="Index" asp-route-userName="@Model.Shelf.CreatedBy.Name">@Model.Shelf.CreatedBy.Name</a>
            </small>
        </h2>
    </div>
    <div class="col-md-2 top-buffer" id="js-operation">
        @if (Model.IsShelfOwner)
        {
            <button type="button" class="btn btn-danger js-remove-shelf" data-shelf-id="@Model.Shelf.Id" data-user-name="@Model.Shelf.CreatedBy.Name" aria-label="Remove">
                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
            </button>

            if (Model.Shelf.IsPublic)
            {
                <button type="button" class="btn btn-default js-makePrivate-shelf pull-right" title="Hide" data-shelf-id="@Model.Shelf.Id" aria-label="Hide">
                    <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span>
                </button>
            }
            else
            {
                <button type="button" class="btn btn-default js-makePublic-shelf pull-right" data-shelf-id="@Model.Shelf.Id" aria-label="Hide">
                    <span class="glyphicon glyphicon-eye-close" aria-hidden="true"></span>
                </button>
            }

        }
    </div>
</div>
<div class="row top-buffer">
    <div class="col-md-12">
        <div id="grid" data-columns>
            @foreach (var book in Model.Shelf.Books)
            {
                <div class="thumbnail">
                    <img src="~/images/book.jpg" alt="@book.Title" class="img-responsive" />
                    <div class="caption">
                        <h3>@book.Title</h3>
                        @if (Model.IsShelfOwner)
                        {
                            <button type="button" class="btn btn-default js-remove-book" data-book-id="@book.Id" aria-label="Remove">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            </button>
                        }
                        <p>...</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $.fn.editable.defaults.mode = "inline";
        $(document).ready(function () {
            $(".js-editable").editable({
                ajaxOptions: {
                    headers:
                    {
                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    }
                }
            });

            $(".js-remove-book").click(function () {
                var button = $(this);

                swal({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this book!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $.ajax({
                                url: "/api/books/" + button.data("book-id"),
                                method: "DELETE",
                                headers:
                                {
                                    RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                }
                            })
                                .done(function () {
                                    button.parents(".thumbnail").fadeOut(function () {
                                        $(this).remove();
                                        salvattore.recreateColumns(document.querySelector('#grid'));
                                    });
                                })
                                .fail(function () {
                                    swal("Something failed!", "We could not process your request.", "error");
                                });
                        }
                    });
            });

            $(".js-remove-shelf").click(function () {
                var button = $(this);

                swal({
                        title: "Are you sure?",
                        text: "Once deleted, you will not be able to recover this shelf!",
                        icon: "warning",
                        buttons: true,
                        dangerMode: true,
                    })
                    .then((willDelete) => {
                        if (willDelete) {
                            $.ajax({
                                    url: "/api/shelves/" + button.data("shelf-id"),
                                    method: "DELETE",
                                    headers:
                                    {
                                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                    }
                                })
                                .done(function () {
                                    window.location = "/p/" + button.data("user-name");
                                })
                                .fail(function () {
                                    swal("Something failed!", "We could not process your request.", "error");
                                });
                        }
                    });
            });

            $("#js-operation").on("click", ".js-makePublic-shelf", function () {
                var button = $(this);

                $.ajax({
                    url: "/api/shelves/" + button.data("shelf-id") + "/public",
                    method: "PATCH",
                    headers:
                    {
                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                .done(function () {
                    button
                        .removeClass("js-makePublic-shelf")
                        .addClass("js-makePrivate-shelf");


                    button.children("span")
                        .removeClass("glyphicon-eye-open")
                        .addClass("glyphicon-eye-close");
                })
                .fail(function () {
                    swal("Something failed!", "We could not process your request.", "error");
                });
            });

            $("#js-operation").on("click", ".js-makePrivate-shelf", function () {
                var button = $(this);

                $.ajax({
                        url: "/api/shelves/" + button.data("shelf-id") + "/private",
                        method: "PATCH",
                        headers:
                        {
                            RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        }
                    })
                    .done(function () {
                        button
                            .removeClass("js-makePrivate-shelf")
                            .addClass("js-makePublic-shelf");


                        button.children("span")
                            .removeClass("glyphicon-eye-close")
                            .addClass("glyphicon-eye-open");
                    })
                    .fail(function () {
                        swal("Something failed!", "We could not process your request.", "error");
                    });
            });
        });


    </script>
}