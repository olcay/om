@model ShelfViewModel
@{
    ViewData["Title"] = Model.Shelf.Title;
}
<div class="row top-buffer">
    <div class="col-md-10">
        <h2>
            @if (Model.IsShelfOwner)
            {
                <span class="js-editable" data-type="text" data-pk="@Model.Shelf.Id" data-url="@Url.Action("Edit", "Shelves")" data-title="Rename shelf">@Model.Shelf.Title</span>
            }
            else
            {
                @Model.Shelf.Title
            }
            
            <small>
                <sup class="label label-warning" style="@Html.Raw(Model.Shelf.IsPublic ? "display: none;":"")" id="lblIsPublic">Private</sup>
                
            </small>
        </h2>
        <p>Created by <a asp-controller="Profiles" asp-action="Index" asp-route-userName="@Model.Shelf.CreatedBy.Name">@Model.Shelf.CreatedBy.Name</a> on 
            <span data-toggle="tooltip" title="@Model.Shelf.CreationDate.ToLongDateString()" data-placement="bottom">@Model.Shelf.CreationDate.DayOfWeek.ToString()</span>
            @if (Model.Shelf.CreationDate.Date != Model.Shelf.UpdateDate.Date)
            {
                <text> and updated on </text>
                <span data-toggle="tooltip" title="@Model.Shelf.UpdateDate.ToLongDateString()" data-placement="bottom" > @Model.Shelf.UpdateDate.DayOfWeek.ToString() </span>
            }
        </p>
    </div>
    <div class="col-md-2 top-buffer" id="js-operation">
        @if (Model.IsShelfOwner)
        {
            <!-- Single button -->
            <div class="btn-group pull-right">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="glyphicon glyphicon-menu-hamburger"></span>
                </button>
                <ul class="dropdown-menu">
                    <li>

                        <a href="#" id="js-makePrivate-shelf" data-shelf-id="@Model.Shelf.Id" aria-label="Hide" style="@Html.Raw(!Model.Shelf.IsPublic ? "display: none;" : "")">
                            <span class="glyphicon glyphicon-eye-close" aria-hidden="true"></span> Make private
                        </a>

                        <a href="#" id="js-makePublic-shelf" data-shelf-id="@Model.Shelf.Id" aria-label="Show" style="@Html.Raw(Model.Shelf.IsPublic ? "display: none;" : "")">
                            <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> Make public
                        </a>

                    </li>
                    <li role="separator" class="divider"></li>
                    <li><a href="#" id="js-remove-shelf" data-shelf-id="@Model.Shelf.Id" data-user-name="@Model.Shelf.CreatedBy.Name">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Remove shelf
                    </a></li>
                </ul>
            </div>
        }
    </div>
</div>
<div class="row top-buffer">
    <div class="col-md-12">
        <div id="grid" data-columns>
            @foreach (var book in Model.Shelf.Books)
            {
                <div class="thumbnail book">
                    <img src="~/images/book.jpg" alt="@book.Title" class="img-responsive" />
                    <div class="caption">
                        <div class="row">
                            <div class="col-md-9">
                                <h3>@book.Title</h3>
                            </div>
                            <div class="col-md-3 top-buffer">
                                <div class="actions">
                                    @if (Model.IsShelfOwner)
                                    {
                                        <button type="button" class="btn btn-danger js-remove-book" data-book-id="@book.Id" aria-label="Remove">
                                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                        <p>...</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $.fn.editable.defaults.mode = "inline";
        $(document).ready(function () {
            $(".js-editable").editable({
                ajaxOptions: {
                    headers:
                    {
                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    }
                }
            });

            $(".js-remove-book").click(function () {
                var button = $(this);

                swal({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this book!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $.ajax({
                                url: "/api/books/" + button.data("book-id"),
                                method: "DELETE",
                                headers:
                                {
                                    RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                }
                            })
                                .done(function () {
                                    button.parents(".thumbnail").fadeOut(function () {
                                        $(this).remove();
                                        salvattore.recreateColumns(document.querySelector('#grid'));
                                    });
                                })
                                .fail(function () {
                                    swal("Something failed!", "We could not process your request.", "error");
                                });
                        }
                    });
            });

            $("#js-remove-shelf").click(function (e) {
                e.preventDefault();
                var button = $(this);

                swal({
                        title: "Are you sure?",
                        text: "Once deleted, you will not be able to recover this shelf!",
                        icon: "warning",
                        buttons: true,
                        dangerMode: true,
                    })
                    .then((willDelete) => {
                        if (willDelete) {
                            $.ajax({
                                    url: "/api/shelves/" + button.data("shelf-id"),
                                    method: "DELETE",
                                    headers:
                                    {
                                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                    }
                                })
                                .done(function () {
                                    window.location = "/p/" + button.data("user-name");
                                })
                                .fail(function () {
                                    swal("Something failed!", "We could not process your request.", "error");
                                });
                        }
                    });
            });

            $("#js-operation").on("click", "#js-makePublic-shelf", function (e) {
                e.preventDefault();
                var button = $("#js-makePublic-shelf");

                $.ajax({
                    url: "/api/shelves/" + button.data("shelf-id") + "/public",
                    method: "PATCH",
                    headers:
                    {
                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                .done(function () {
                    button.hide();
                    $("#js-makePrivate-shelf").show();
                    $("#lblIsPublic").hide();
                })
                .fail(function () {
                    swal("Something failed!", "We could not process your request.", "error");
                });
            });

            $("#js-operation").on("click", "#js-makePrivate-shelf", function (e) {
                e.preventDefault();
                var button = $("#js-makePrivate-shelf");

                $.ajax({
                        url: "/api/shelves/" + button.data("shelf-id") + "/private",
                        method: "PATCH",
                        headers:
                        {
                            RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        }
                    })
                    .done(function () {
                        button.hide();
                        $("#js-makePublic-shelf").show();
                        $("#lblIsPublic").show();
                    })
                    .fail(function () {
                        swal("Something failed!", "We could not process your request.", "error");
                    });
            });
        });


    </script>
}